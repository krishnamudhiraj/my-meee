{"version":3,"file":"8.bd915ca1833cb36213a9.hot-update.js","sources":["webpack:///pages/UserDetails/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport { get } from 'lodash';\nimport { Image } from 'react-bootstrap';\nimport Select from 'react-select';\nimport Loader from '../../components/Loader';\nimport { onUpdatingDeatils } from '../../redux/reducers/getStarted/actions';\nimport '../../styles/userDetails.scss';\nimport withAuth from '../../utils/functions/withAuth';\n\nconst optionYear = [\n  { value: 'year_1', label: 'Year 1' },\n  { value: 'year_2', label: 'Year 2' },\n  { value: 'year_3', label: 'Year 3' },\n  { value: 'year_4', label: 'Year 4' },\n  { value: 'year_5', label: 'Year 5' },\n  { value: 'year_6', label: 'Year 6' },\n  { value: 'year_7', label: 'Year 7' },\n  { value: 'year_8', label: 'Year 8' },\n  { value: 'year_9', label: 'Year 9' },\n  { value: 'year_10', label: 'Year 10' },\n  { value: 'year_11', label: 'Year 11' },\n  { value: 'year_12', label: 'Year 12' },\n];\nconst optionGender = [\n  { value: 'male', label: 'Male' },\n  { value: 'female', label: 'Female' },\n  { value: 'other', label: 'Other' },\n  { value: 'not_to_say', label: 'Prefer not to say' },\n];\nconst optionType = [\n  { value: 'teacher', label: 'Teacher' },\n  { value: 'pupil', label: 'Pupil' },\n  { value: 'member_of_staff', label: 'Member of staff' },\n];\n\nclass UserDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedYear: null,\n      selectedGender: null,\n      selectedType: null,\n    };\n    this.updateUserDetails = this.updateUserDetails.bind(this);\n  }\n\n  handleChange = (type, value) => {\n    if (type === 'selectedYear') this.setState({ selectedYear: value });\n    if (type === 'selectedGender') this.setState({ selectedGender: value });\n    if (type === 'selectedType') this.setState({ selectedType: value });\n  };\n\n  updateUserDetails = () => {\n    const { onUpdatingDeatils } = this.props;\n    const { selectedYear, selectedGender, selectedType } = this.state;\n    onUpdatingDeatils({\n      year: selectedYear.label,\n      gender: selectedGender.label,\n      member_type: selectedType.label,\n    }).then(() => {\n      Router.push('/WhatAreValues');\n    });\n  };\n\n  customStyles = {\n    option: (base, state) => ({\n      ...base,\n      borderBottom: '1px dotted pink',\n      color: state.isFullscreen ? 'red' : 'blue',\n      padding: 20,\n    }),\n    control: () => ({\n      // none of react-selects styles are passed to <View />\n      // width: 200,\n    }),\n    singleValue: (base, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n\n      return { ...base, opacity, transition };\n    },\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    const { selectedYear, selectedGender, selectedType } = this.state;\n\n    return (\n      <div className=\"user-deatils\">\n        {isLoading && <Loader />}\n        <div className=\"user-deatils-content\">\n          <Image\n            className=\"meee-image\"\n            src={require('../../utils/assets/meeLogo2.png')}\n            responsive\n          />\n          <form>\n            <div className=\"input-view\">\n              <div className=\"input-view-in\">\n                <p className=\"question\">Which year are you in?</p>\n                <div className=\"dropdown-theme\">\n                  <Select\n                    value={selectedYear}\n                    placeholder={'I am in...'}\n                    indicatorSeparator\n                    onChange={value => this.handleChange('selectedYear', value)}\n                    options={optionYear}\n                    styles={customStyles}\n                  />\n                </div>\n              </div>\n\n              {selectedYear !== null && (\n                <div className=\"input-view-in\">\n                  <p className=\"question\">\n                    What\n                    {\"'\"}s your gender?\n                  </p>\n                  <div className=\"dropdown-theme\">\n                    <Select\n                      value={selectedGender}\n                      placeholder={'Select from list'}\n                      onChange={value =>\n                        this.handleChange('selectedGender', value)\n                      }\n                      options={optionGender}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {selectedYear !== null &&\n                selectedGender !== null && (\n                  <div className=\"input-view-in\">\n                    <p className=\"question\">\n                      Are you a pupil, teacher, or member of staff?\n                    </p>\n                    <div className=\"dropdown-theme\">\n                      <Select\n                        value={selectedType}\n                        placeholder={'Select from list'}\n                        onChange={value =>\n                          this.handleChange('selectedType', value)\n                        }\n                        options={optionType}\n                      />\n                    </div>\n                  </div>\n                )}\n            </div>\n          </form>\n\n          {selectedYear !== null &&\n            selectedGender !== null &&\n            selectedType !== null && (\n              <button className=\"next-button\" onClick={this.updateUserDetails}>\n                <div className=\"btn-up-body\">\n                  <p>All done!</p>\n                  <Image\n                    className=\"next-arrow\"\n                    src={require('../../utils/assets/rightArrow.png')}\n                    responsive\n                  />\n                </div>\n                <p className=\"btm-text\">Start using the app</p>\n              </button>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  onUpdatingDeatils: code => dispatch(onUpdatingDeatils(code)),\n});\n\nconst mapStateToProps = ({ getStarted }) => ({\n  isLoading: get(getStarted, 'isLoading'),\n});\n\nexport default withAuth(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(UserDetails)\n);\n\n\n\n// WEBPACK FOOTER //\n// pages/UserDetails/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAMA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAhBA;AA5BA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAQA;AACA;;;AAscA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AANA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAvIA;AACA;AAyIA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}